name: Semantic Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      contents: write

    outputs:
      new_release_published: ${{ steps.release.outputs.new_release_published }}
      new_release_major_version: ${{ steps.release.outputs.new_release_major_version }}
      new_release_minor_version: ${{ steps.release.outputs.new_release_minor_version }}
      new_release_patch_version: ${{ steps.release.outputs.new_release_patch_version }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      id: release
      uses: aasseman/python-semantic-release@gh_outputs
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
  
  container_build:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    permissions:
      packages: write

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: autoagora
        tags: latest v${{ needs.release.outputs.new_release_major_version }}.${{ needs.release.outputs.new_release_minor_version }}.${{ needs.release.outputs.new_release_patch_version }} v${{ needs.release.outputs.new_release_major_version }}.${{ needs.release.outputs.new_release_minor_version }} v${{ needs.release.outputs.new_release_major_version }}
        containerfiles: |
          ./Dockerfile
    - name: Push
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ghcr.io/semiotic-ai
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-ghcr.outputs.registry-paths }}"
